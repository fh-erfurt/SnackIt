-- MySQL Script generated by MySQL Workbench
-- Sun Dec  6 13:44:41 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema SnackIt
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema SnackIt
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `SnackIt` DEFAULT CHARACTER SET utf8 ;
USE `SnackIt` ;

-- -----------------------------------------------------
-- Table `SnackIt`.`Address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SnackIt`.`Address` (
  `AddressId` INT NOT NULL AUTO_INCREMENT,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UpdatedAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `Country` VARCHAR(45) NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `Zipcode` VARCHAR(12) NOT NULL,
  `City` VARCHAR(45) NOT NULL,
  `Street` VARCHAR(45) NOT NULL,
  `Number` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`AddressId`));


-- -----------------------------------------------------
-- Table `SnackIt`.`Account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SnackIt`.`Account` (
  `AccountID` INT NOT NULL AUTO_INCREMENT,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UpdatedAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `FirstName` VARCHAR(50) NOT NULL,
  `LastName` VARCHAR(30) NOT NULL,
  `Email` VARCHAR(255) UNIQUE NOT NULL,
  `Password` VARCHAR(100) NOT NULL,
  `Role` INT NOT NULL DEFAULT 0,
  `AddressId` INT NULL,
  PRIMARY KEY (`AccountID`),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC),
  INDEX `fk_Account_Address1_idx` (`AddressId` ASC),
  CONSTRAINT `fk_Account_Address1`
    FOREIGN KEY (`AddressId`)
    REFERENCES `SnackIt`.`Address` (`AddressId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `SnackIt`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SnackIt`.`Orders` (
  `OrderID` INT NOT NULL AUTO_INCREMENT,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UpdatedAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `Status` INT NOT NULL DEFAULT 0,
  `Account_AccountID` INT NOT NULL,
  `Address_AddressId` INT NULL,
  `FirstName` VARCHAR(50) NULL,
  `LastName` VARCHAR(30) NULL,
  PRIMARY KEY (`OrderID`),
  INDEX `fk_Orders_Account1_idx` (`Account_AccountID` ASC),
  INDEX `fk_Orders_Address1_idx` (`Address_AddressId` ASC),
  CONSTRAINT `fk_Orders_Account1`
    FOREIGN KEY (`Account_AccountID`)
    REFERENCES `SnackIt`.`Account` (`AccountID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Orders_Address1`
    FOREIGN KEY (`Address_AddressId`)
    REFERENCES `SnackIt`.`Address` (`AddressId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `SnackIt`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SnackIt`.`Product` (
  `ProductID` INT NOT NULL AUTO_INCREMENT,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UpdatedAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `ProdName` VARCHAR(100) NOT NULL,
  `Price` DECIMAL(10,2) NOT NULL,
  `ProdType` INT NOT NULL,
  `OnStock` INT NOT NULL,
  PRIMARY KEY (`ProductID`),
  UNIQUE INDEX `ProdName_UNIQUE` (`ProdName` ASC));


-- -----------------------------------------------------
-- Table `SnackIt`.`Product_to_Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SnackIt`.`Product_to_Order` (
  `PtoID` INT NOT NULL AUTO_INCREMENT,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UpdatedAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `ProductCount` INT NOT NULL,
  `OrderID` INT NOT NULL,
  `ProductID` INT NOT NULL,
  PRIMARY KEY (`PtoID`),
  INDEX `fk_Product_to_Order_Orders1_idx` (`OrderID` ASC),
  INDEX `fk_Product_to_Order_Product1_idx` (`ProductID` ASC),
  CONSTRAINT `fk_Product_to_Order_Orders1`
    FOREIGN KEY (`OrderID`)
    REFERENCES `SnackIt`.`Orders` (`OrderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Product_to_Order_Product1`
    FOREIGN KEY (`ProductID`)
    REFERENCES `SnackIt`.`Product` (`ProductID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `SnackIt`.`Property`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SnackIt`.`Property` (
  `PropertyID` INT NOT NULL AUTO_INCREMENT,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UpdatedAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `Type` VARCHAR(45) NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Value` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`PropertyID`));


-- -----------------------------------------------------
-- Table `SnackIt`.`Product_has_Property`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SnackIt`.`Product_has_Property` (
  `PhpID` INT NOT NULL AUTO_INCREMENT,
  `CreatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UpdatedAt` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `ProductID` INT NOT NULL,
  `PropertyID` INT NOT NULL,
  PRIMARY KEY (`PhpID`),
  INDEX `fk_Product_has_Property_Product1_idx` (`ProductID` ASC),
  INDEX `fk_Product_has_Property_Property1_idx` (`PropertyID` ASC),
  CONSTRAINT `fk_Product_has_Property_Product1`
    FOREIGN KEY (`ProductID`)
    REFERENCES `SnackIt`.`Product` (`ProductID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Product_has_Property_Property1`
    FOREIGN KEY (`PropertyID`)
    REFERENCES `SnackIt`.`Property` (`PropertyID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
